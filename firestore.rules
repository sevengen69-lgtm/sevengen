/**
 * @description This ruleset enforces a strict user-ownership model for user profiles and allows admins to manage quote requests.
 *   Homepage content is publicly readable but only editable by authenticated users.
 * @dataStructure
 *   - /users/{userId}: Stores individual user profiles, accessible only by the user themselves.
 *   - /quoteRequests/{quoteId}: Stores quote requests, managed by admins.
 *   - /homepageContent/{pageId}: Stores content for specific pages, publicly readable and editable by authenticated users.
 * @keySecurityDecisions
 *   - Users can only access their own profile data.
 *   - Admins have full CRUD access to quote requests.
 *   - Homepage content is publicly readable to improve SEO and user experience.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile information.
     * @path /users/{userId}
     * @allow (create) - Authenticated user can create their own profile if the userId matches their auth UID.
     * @allow (get, list, update, delete) - Authenticated user can only access their own profile.
     * @deny (create) - If the userId does not match the authenticated user's UID.
     * @deny (get, list, update, delete) - If the authenticated user is not the owner of the profile.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow get, list: if isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Controls access to quote requests.
     * @path /quoteRequests/{quoteId}
     * @allow (get, list, create, update, delete) - Only authenticated users can manage quote requests.
     * @deny (get, list, create, update, delete) - If the user is not authenticated.
     * @principle Requires authentication for all operations on quote requests.
     */
    match /quoteRequests/{quoteId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to homepage content.
     * @path /homepageContent/{pageId}
     * @allow (get, list) - Anyone can read the homepage content.
     * @allow (create, update, delete) - Only authenticated users can modify the homepage content.
     * @deny (create, update, delete) - If the user is not authenticated.
     * @principle Allows public read access with authenticated-user-only writes.
     */
    match /homepageContent/{pageId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }
  }
}